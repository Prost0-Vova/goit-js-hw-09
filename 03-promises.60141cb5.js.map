{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAU,SAAAC,G,kBAkB9B,IAAMC,EAAWC,EAAQC,EAAOC,EAChCC,EAAeA,EACZC,MAAK,W,OAaaC,EAbOH,EAaGI,EAbAP,EAcxB,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAVP,IAAuBD,EAAUC,C,IAZ5BF,MAAK,SAAAU,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,EAAAvB,GAASwB,OAAOC,QACd,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAGnDa,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,EAAAvB,GAASwB,OAAOI,QACX,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,KA3BnDR,EAAEuB,iBACF,IAAMrB,EAAQsB,SAAS5B,EAAK6B,SAASjB,MAAMkB,OACrCvB,EAAOqB,SAAS5B,EAAK6B,SAAStB,KAAKuB,OACnCC,EAASH,SAAS5B,EAAK6B,SAASE,OAAOD,OAE7C,GAAIxB,GAAS,GAAKC,EAAO,GAAKwB,EAAS,EACrC,OAAOV,EAAAvB,GAASkC,OAAOC,QACrB,QACA,6BACA,aAON,IAFA,IAAIxB,EAAeI,QAAQC,UAElBoB,EAAI,EAAGA,EAAIH,EAAQG,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener(\"submit\", e => {\n  e.preventDefault();\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n  \n  if (delay <= 0 || step < 0 || amount < 0) {\n    return Notiflix.Report.warning(\n      'Oops!',\n      'Please enter valid numbers',\n      'Try again'\n    );\n  }\n\n\nlet promiseChain = Promise.resolve();\n\nfor (let i = 1; i < amount; i++) {\n  const curDelay = delay + step * i;\n  promiseChain = promiseChain\n    .then(() => createPromise(i, curDelay))\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`\n      );\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n  });\n}\n});\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","curDelay","delay1","step","i","promiseChain","then","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","parseInt","elements","value","amount","Report","warning","i1","_loop"],"version":3,"file":"03-promises.60141cb5.js.map"}